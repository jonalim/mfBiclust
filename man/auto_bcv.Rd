% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bcv.R
\name{auto_bcv}
\alias{auto_bcv}
\title{Use BCV to estimate the optimal k until convergence}
\usage{
auto_bcv(Y, ks = seq_len(min(nrow(Y), ncol(Y)) - 1), holdouts = 3L,
  maxIter = 100L, tol = (10^-4), bestOnly = FALSE, verbose = FALSE,
  interactive = TRUE)
}
\arguments{
\item{Y}{the input matrix}

\item{ks}{a vector of bicluster quantities to consider}

\item{holdouts}{the number of row and column partitions. The true number of
holdouts will be \code{holdouts} ^ 2.}

\item{maxIter}{maximum number of iterations}

\item{tol}{tolerance used to determine convergence}

\item{bestOnly}{if FALSE, both the predicted number of biclusters and a table
of result counts is returned}

\item{verbose}{provide output after each iteration}

\item{interactive}{prompt before running bcv on matrices with missing values}
}
\value{
if \code{bestOnly = FALSE}, the predicted bicluster quantity. if
  \code{bestOnly = TRUE}, a \code{\link{list}} containing: \describe{
  \item{best}{the predicted bicluster quantity} \item{counts}{a named table
  of result counts} }
}
\description{
Repeatedly chooses the k that minimizes the BCV until the the distribution of
k's has converged. Often less than 50 iterations are required. The median k
is reported as "best".
}
\details{
The highest k tested is limited to \eqn{(\code{holdouts} - 1) /
\code{holdouts} * \min(m, n)} for \eqn{Y_{m,n}}. A warning will be issued if
not all \code{ks} can be tested.
}
\examples{
auto_bcv(yeast_benchmark[[1]])
}
\seealso{
\code{\link{bcv}()}
}
